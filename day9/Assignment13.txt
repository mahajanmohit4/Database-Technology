1) Create a union of two queries that shows the names, cities, and ratings of all
customers. Those with rating of 200 or greater will also have the words “High
Rating”, while the others will have the words “Low Rating”.
query:-	select cname,city,rating ,'high_rating'
	from customers where rating >= 200
	union 
	(select cname,city,rating , 'low_rating' 	
	from customers where rating < 200);

2) Write a command that produces the name and number of each salesperson and
each customer with more than one current order. Put the results in alphabetical
order.
query:-	
	select s.snum,c.cname,sname
	from salespeople s,customers c
	where s.snum = c.snum and c.snum in (
	select snum from customers
	group by snum 
	having count(snum)>1)
	order by sname;
-------------or-----------------------------
query:-	
	select snumber , sname from salespeople as s ,
	(select snum as snumber,count(*) as counting
	from orders
	group by snum
	having count(*) > 1) as tempp
	where s.snum = tempp.snumber
	union  
	select c.cnum , c.cname from customers c,
	(Select  cnum as cnumber ,count(*) as  counting
	from orders
	group by cnum
	having count(*) > 1) as tempp
	where c.cnum = tempp.cnumber;


3) Form a union of three queries. Have the first select the snums of all salespeople in
San Jose; the second, the cnums of all customers in San Jose; and the third the
onums of all orders on October 3. Retain duplicates between the last two queries
but eliminate any redundancies between either of them and the first.
(Note: in the sample tables as given, there would be no such redundancy. This is
besides the point.)
query:-	select snum from salespeople
	where city = 'San Jose'
	union
	Select  cnum from customers
	where city = 'San Jose'
	union all
	select  onum from Orders
	where odate = '1990-10-03';